name: Deploy Preview to GitHub Pages

on:
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js with Cache
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "npm"
          cache-dependency-path: "dashboard/package-lock.json"

      - name: Set up Just
        uses: extractions/setup-just@v2

      - name: GitHub Stats Analyser
        uses: JackPlowman/github-stats-analyser@v1.0.1
        with:
          repository_owner: ${{ github.repository_owner }}

      - name: Copy generated files to github pages folder
        run: cp -r repository_statistics.json dashboard/data

      - name: Install Dashboard Dependenciesg
        run: just dashboard::install

      - name: Build Site
        run: just dashboard::build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dashboard/out

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  test-deployment:
    name: Test GitHub Pages Deployment
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry

      - name: Install Python 3.12 with Poetry Cache
        uses: actions/setup-python@v5
        with:
          python-version-file: "tests/pyproject.toml"
          cache: "poetry"

      - name: Set up Just
        uses: extractions/setup-just@v2

      - name: Install Poetry Dependencies
        run: just tests::install

      - name: Run tests
        run: just tests::run

  revert-to-main:
    name: Build Main
    runs-on: ubuntu-latest
    if: failure()
    needs: test-deployment

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout main
        run: git checkout main

      - name: Install Poetry
        run: pipx install poetry

      - name: GitHub Stats Analyser
        uses: JackPlowman/github-stats-analyser@v1.0.1
        with:
          repository_owner: ${{ github.repository_owner }}

      - name: Copy generated files to github pages folder
        run: cp -r repository_statistics.json dashboard/data

      - name: Build Site
        run: just dashboard::install

      - name: Build Site
        run: just dashboard::build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dashboard/out

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
